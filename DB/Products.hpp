#pragma once

#include <DB/ADatabase.hpp>

namespace pos { class Product; }

namespace db {

///////////////////////////////////////////////////////////////////////////
/// \brief Simplifies and automates the usage of a qt window
/// \ingroup ecs
///
/// \include Products.hpp <DB/Products.hpp>
///
/// Contains a ::QApplication and a ::QMainWindow window
///
///////////////////////////////////////////////////////////////////////////
class Products
    : public ::db::ADatabase
{

public:

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Static
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    static auto get()
        -> ::std::shared_ptr<Products>;



public:


    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    explicit Products(
        ::std::string name,
        ::std::string path = "database/"
    );



    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Operations
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    void insert(
        const ::pos::Product& product
    );

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    [[ nodiscard ]] auto retrieve(
        const ::std::vector<::std::string>& id
    ) -> ::std::vector<::pos::Product>;

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    [[ nodiscard ]] auto retrieveAll()
        -> ::std::vector<::pos::Product>;

};

} // namespace db
