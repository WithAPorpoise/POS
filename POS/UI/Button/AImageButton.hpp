#pragma once

namespace pos::ui::button {

///////////////////////////////////////////////////////////////////////////
/// \brief Simplifies the usage of a Qt button with an image
/// \ingroup ecs
///
/// \include AImageButton.hpp <POS/UI/Button/AImageButton.hpp>
///
///////////////////////////////////////////////////////////////////////////
class AImageButton
    : public ::QPushButton
{

public:

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Constructors
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Constructor
    ///
    /// The filename is searched within the ./assets/icon directory
    ///
    ///////////////////////////////////////////////////////////////////////////
    explicit AImageButton(
        ::QMainWindow& window,
        const ::std::string& filename,
        ::std::size_t xPos,
        ::std::size_t yPos,
        ::std::size_t xSize,
        ::std::size_t ySize
    ) noexcept;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Constructor with tooltip
    ///
    /// The filename is searched within the ./assets/icon directory
    ///
    ///////////////////////////////////////////////////////////////////////////
    explicit AImageButton(
        ::QMainWindow& window,
        const ::std::string& filename,
        const ::std::string& tooltip,
        ::std::size_t xPos,
        ::std::size_t yPos,
        ::std::size_t xSize,
        ::std::size_t ySize
    ) noexcept;



    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Rule of 5
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Destructor
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual ~AImageButton() noexcept;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Copy constructor
    ///
    ///////////////////////////////////////////////////////////////////////////
    AImageButton(
        const AImageButton& other
    ) noexcept = delete;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Copy assign operator
    ///
    ///////////////////////////////////////////////////////////////////////////
    auto operator=(
        const AImageButton& other
    ) noexcept
        -> AImageButton& = delete;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Move constructor
    ///
    ///////////////////////////////////////////////////////////////////////////
    AImageButton(
        AImageButton& that
    ) noexcept = delete;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief Move assign operator
    ///
    ///////////////////////////////////////////////////////////////////////////
    auto operator=(
        AImageButton& that
    ) noexcept
        -> AImageButton = delete;



private:

    ::std::vector<::std::string> m_lines;

};

} // namespace pos::ui::button

namespace pos::ui { using AImageButton = pos::ui::button::AImageButton; }
